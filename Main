-- toggles
getgenv().questToggle = false
getgenv().duraToggle = false
getgenv().eatToggle = false
getgenv().equipToggle= false
getgenv().gloveToggle = false
getgenv().gangToggle = false
getgenv().clickToggle = false
getgenv().PBToggle = false
-- variables
local plr = game:GetService("Players").LocalPlayer
local VIM = game:GetService("VirtualInputManager")
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local minStam,maxStam
local foodName
local covType,toolType
function autoQuest()
    local deliv = workspace.Quests.QuestLocations.Delivery
    local cat = workspace.Quests.QuestLocations.Cat
    local briefcase = workspace.Quests.QuestLocations.Briefcase
    while questToggle do
        local char = plr.Character or plr.CharacterAdded:Wait()
        local quest = char:FindFirstChild("Quest")
        if quest ~= nil then
            if quest.PlayerQuest.Value == "Cat" or quest.PlayerQuest.Value == "Briefcase" or quest.PlayerQuest.Value == "Delivery" then
                local loc =  quest.Location.Value
                if quest.PlayerQuest.Value == "Briefcase" then
                    local case = briefcase:FindFirstChild(tostring(loc)).Case
                    local cd = briefcase:FindFirstChild(tostring(loc)).ClickDetector
                    repeat 
                        char.HumanoidRootPart.CFrame = case.CFrame 
                        fireclickdetector(cd,32)
                        wait()
                    until char:FindFirstChild("Quest") == nil or quest.Objective.Value
                else
                    if quest.PlayerQuest.Value == "Cat" then
                        local place = cat[tostring(loc)]
                        local cd = place.ClickDetector
                        repeat 
                            char.HumanoidRootPart.CFrame = place.CFrame 
                            fireclickdetector(cd,32)
                            wait()
                        until char:FindFirstChild("Quest") == nil or quest.Objective.Value
                    else
                        local place = deliv[tostring(loc)]
                        repeat 
                            char.HumanoidRootPart.CFrame = place.CFrame + place.CFrame.UpVector * -2
                            firetouchinterest(char.HumanoidRootPart,place,0)
                            firetouchinterest(char.HumanoidRootPart,place,1)
                            wait()
                        until char:FindFirstChild("Quest") == nil or quest.Objective.Value
                    end
                end
            else
                quest:Destroy()
            end
        else
            local args = {
                [1] = "Quest"
            }
            game:GetService("ReplicatedStorage").RemoteEvent:FireServer(unpack(args))
            char.ChildAdded:Wait()
        end
        wait()
    end
end
function autoDura()
    while duraToggle do
        if plr.Stamina.Value <=minStam then 
            repeat wait() until plr.Stamina.Value>=maxStam
        else
            for i,v in pairs(workspace.TrainingStations:GetChildren()) do 
                fireclickdetector(v.ClickDetector,5)
            end
        end
        wait()
    end
end

function autoEat()
    while eatToggle do
        for i,v in pairs(plr.Backpack:GetChildren()) do
            if v:IsA("Tool") and v.Name == foodName then 
                local char = plr.Character
                char.Humanoid:EquipTool(v)
                char:FindFirstChild(v.Name):Activate()
                break;
            end
        end
        if foodName == "Chicken" or (string.find(foodName,"Shake"))then
            wait(32)
        else
            wait(600)
        end
    end
end
function autoGloves()
    return
end
function autoEquip(tool)
    while equipToggle do
        local char = plr.Character
        local yes
        for i,v in pairs(plr.Backpack:GetChildren()) do
            if string.find(v.Name,tool) then
                yes = v
                break;
            end
        end
        if yes == nil then continue; end
        char:WaitForChild("Humanoid"):EquipTool(yes)
        wait()
    end
end
function autoGang()
    local vault = workspace.GangArea.Vault
    while gangToggle do
        local char = plr.Character
        char.HumanoidRootPart.CFrame = vault.CFrame + vault.CFrame.UpVector * -2
        if char:FindFirstChild("Combat") then char:FindFirstChild("Combat"):Activate()
        else char.Humanoid:EquipTool(plr.Backpack:FindFirstChild("Combat")) end 
        wait()
    end
end
function autoPB()
    return
end
function autoClick()
    while clickToggle do 
        VIM:SendMouseButtonEvent(900, 400, 0, true, game, 1)
        VIM:SendMouseButtonEvent(900, 400, 0, false, game, 1)
        wait()
    end
end

local Window = OrionLib:MakeWindow({Name = "Tatakai V DOGSHIT", HidePremium = true})
local Tab = Window:MakeTab({
	Name = "Farms",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab:AddToggle({
	Name = "Coventional Grind",
	Default = false,
	Callback = function(Value)
        if Value == false then
            duraToggle = false
            gloveToggle = false
            questToggle = false
            gangToggle = false
        else
            if covType == "Pullups" then
                duraToggle = Value
                autoDura()
            else
                if covType == "Gloves" then
                    gloveToggle = Value
                    autoGloves()
                else
                    if covType == "Money" then
                        questToggle = Value
                        autoQuest()
                    else
                        gangToggle = Value
                        autoGang()
                    end
                end
            end
        end
    end
})
Tab:AddDropdown({
	Name = "Type",
	Default = "Pullups",
	Options = {"Pullups","Glove", "Money","Gangbase",},
	Callback = function(Value)
		covType = Value
	end    
})
Tab:AddToggle({
	Name = "Tool Grind",
	Default = false,
	Callback = function(Value)
		equipToggle = Value
        autoEquip(toolType)
    end
})
Tab:AddDropdown({
	Name = "Tool",
	Default = "Squat",
	Options = {"Squat","Situp", "Pushup","Dumbbell","Meditate","Jumping Rope"}, -- work on meditate
	Callback = function(Value)
		toolType = Value
	end    
})
local Tab3 = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab3:AddSlider({
	Name = "Minimum Stamina",
	Min = 0,
	Max = 1000,
	Default = 50,
	Color = Color3.fromRGB(0, 247, 255),
	Increment = 1,
	ValueName = "",
	Callback = function(Value)
		minStam = Value
	end    
})
Tab3:AddSlider({
	Name = "Maximum Stamina",
	Min = 0,
	Max = 1000,
	Default = 50,
	Color = Color3.fromRGB(0, 247, 255),
	Increment = 1,
	ValueName = "",
	Callback = function(Value)
		maxStam = Value
	end    
})
Tab3:AddToggle({
	Name = "Auto Eat",
	Default = false,
	Callback = function(Value)
	    eatToggle = Value
        autoEat()
    end
})
Tab3:AddDropdown({
	Name = "Food to auto eat",
	Default = "Chicken",
	Options = {"Chicken","Burger", "Chocolate Shake","Mango Shake","Strawberry Shake","Ramen"}, -- work on meditate
	Callback = function(Value)
		foodName = Value
	end    
})
plr.CharacterAdded:Connect(function(char)
    wait(6)
    spawn(function()
        autoQuest()
    end)
end)
